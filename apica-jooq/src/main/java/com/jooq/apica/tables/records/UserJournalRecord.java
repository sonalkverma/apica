/*
 * This file is generated by jOOQ.
 */
package com.jooq.apica.tables.records;


import com.jooq.apica.tables.UserJournal;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserJournalRecord extends UpdatableRecordImpl<UserJournalRecord> implements Record4<UInteger, UInteger, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user_db.user_journal.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>user_db.user_journal.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>user_db.user_journal.userId</code>.
     */
    public void setUserid(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>user_db.user_journal.userId</code>.
     */
    public UInteger getUserid() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>user_db.user_journal.journal</code>.
     */
    public void setJournal(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>user_db.user_journal.journal</code>.
     */
    public String getJournal() {
        return (String) get(2);
    }

    /**
     * Setter for <code>user_db.user_journal.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>user_db.user_journal.created_date</code>.
     */
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UInteger, UInteger, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UInteger, UInteger, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return UserJournal.USER_JOURNAL.ID;
    }

    @Override
    public Field<UInteger> field2() {
        return UserJournal.USER_JOURNAL.USERID;
    }

    @Override
    public Field<String> field3() {
        return UserJournal.USER_JOURNAL.JOURNAL;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return UserJournal.USER_JOURNAL.CREATED_DATE;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public UInteger component2() {
        return getUserid();
    }

    @Override
    public String component3() {
        return getJournal();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedDate();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public UInteger value2() {
        return getUserid();
    }

    @Override
    public String value3() {
        return getJournal();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedDate();
    }

    @Override
    public UserJournalRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public UserJournalRecord value2(UInteger value) {
        setUserid(value);
        return this;
    }

    @Override
    public UserJournalRecord value3(String value) {
        setJournal(value);
        return this;
    }

    @Override
    public UserJournalRecord value4(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public UserJournalRecord values(UInteger value1, UInteger value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserJournalRecord
     */
    public UserJournalRecord() {
        super(UserJournal.USER_JOURNAL);
    }

    /**
     * Create a detached, initialised UserJournalRecord
     */
    public UserJournalRecord(UInteger id, UInteger userid, String journal, LocalDateTime createdDate) {
        super(UserJournal.USER_JOURNAL);

        setId(id);
        setUserid(userid);
        setJournal(journal);
        setCreatedDate(createdDate);
        resetChangedOnNotNull();
    }
}
