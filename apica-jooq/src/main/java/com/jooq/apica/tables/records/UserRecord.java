/*
 * This file is generated by jOOQ.
 */
package com.jooq.apica.tables.records;


import com.jooq.apica.tables.User;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record9<UInteger, String, String, String, Integer, UInteger, LocalDateTime, UInteger, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user_db.user.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>user_db.user.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>user_db.user.user_name</code>.
     */
    public void setUserName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>user_db.user.user_name</code>.
     */
    public String getUserName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user_db.user.email</code>.
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>user_db.user.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>user_db.user.phone</code>.
     */
    public void setPhone(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>user_db.user.phone</code>.
     */
    public String getPhone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>user_db.user.updated_count</code>.
     */
    public void setUpdatedCount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>user_db.user.updated_count</code>.
     */
    public Integer getUpdatedCount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>user_db.user.created_by</code>.
     */
    public void setCreatedBy(UInteger value) {
        set(5, value);
    }

    /**
     * Getter for <code>user_db.user.created_by</code>.
     */
    public UInteger getCreatedBy() {
        return (UInteger) get(5);
    }

    /**
     * Setter for <code>user_db.user.created_date</code>.
     */
    public void setCreatedDate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>user_db.user.created_date</code>.
     */
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>user_db.user.updated_by</code>.
     */
    public void setUpdatedBy(UInteger value) {
        set(7, value);
    }

    /**
     * Getter for <code>user_db.user.updated_by</code>.
     */
    public UInteger getUpdatedBy() {
        return (UInteger) get(7);
    }

    /**
     * Setter for <code>user_db.user.updated_date</code>.
     */
    public void setUpdatedDate(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>user_db.user.updated_date</code>.
     */
    public LocalDateTime getUpdatedDate() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<UInteger, String, String, String, Integer, UInteger, LocalDateTime, UInteger, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<UInteger, String, String, String, Integer, UInteger, LocalDateTime, UInteger, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.USER_NAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return User.USER.PHONE;
    }

    @Override
    public Field<Integer> field5() {
        return User.USER.UPDATED_COUNT;
    }

    @Override
    public Field<UInteger> field6() {
        return User.USER.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return User.USER.CREATED_DATE;
    }

    @Override
    public Field<UInteger> field8() {
        return User.USER.UPDATED_BY;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return User.USER.UPDATED_DATE;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserName();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getPhone();
    }

    @Override
    public Integer component5() {
        return getUpdatedCount();
    }

    @Override
    public UInteger component6() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedDate();
    }

    @Override
    public UInteger component8() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime component9() {
        return getUpdatedDate();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserName();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getPhone();
    }

    @Override
    public Integer value5() {
        return getUpdatedCount();
    }

    @Override
    public UInteger value6() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedDate();
    }

    @Override
    public UInteger value8() {
        return getUpdatedBy();
    }

    @Override
    public LocalDateTime value9() {
        return getUpdatedDate();
    }

    @Override
    public UserRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public UserRecord value5(Integer value) {
        setUpdatedCount(value);
        return this;
    }

    @Override
    public UserRecord value6(UInteger value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public UserRecord value7(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public UserRecord value8(UInteger value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public UserRecord value9(LocalDateTime value) {
        setUpdatedDate(value);
        return this;
    }

    @Override
    public UserRecord values(UInteger value1, String value2, String value3, String value4, Integer value5, UInteger value6, LocalDateTime value7, UInteger value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(UInteger id, String userName, String email, String phone, Integer updatedCount, UInteger createdBy, LocalDateTime createdDate, UInteger updatedBy, LocalDateTime updatedDate) {
        super(User.USER);

        setId(id);
        setUserName(userName);
        setEmail(email);
        setPhone(phone);
        setUpdatedCount(updatedCount);
        setCreatedBy(createdBy);
        setCreatedDate(createdDate);
        setUpdatedBy(updatedBy);
        setUpdatedDate(updatedDate);
        resetChangedOnNotNull();
    }
}
